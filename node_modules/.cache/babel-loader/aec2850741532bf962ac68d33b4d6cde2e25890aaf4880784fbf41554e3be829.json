{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw Error(\"Not able to fetch from the given end point\");\n        }\n        return res.json();\n      }).then(data => {\n        setData(data);\n        setLoading(false);\n        setError(false);\n      }).catch(err => {\n        console.log(err);\n        if (err.name === \"AbortError\") {\n          console.log(\"fetch aborted\");\n        } else {\n          setError(err.message);\n          setLoading(false);\n        }\n      });\n    }, 1000);\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    error\n  };\n};\n_s(useFetch, \"stXfcx78VSpJpG6rPlzqZyG7xD8=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","_s","data","setData","isLoading","setLoading","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","console","log","name","message","abort"],"sources":["/home/hp/React Projects/Projects/mealful/mealful/src/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isLoading, setLoading]=useState(true);\n    const [error, setError] = useState(null);\n    useEffect(()=>\n    {\n        const abortCont=new AbortController();\n        setTimeout(()=>{\n            fetch(url, {signal: abortCont.signal})\n            .then(res=>{\n            if(!res.ok)\n            {\n             throw Error(\"Not able to fetch from the given end point\");\n            }\n            return res.json();\n        })\n            .then(data=>{\n            setData(data);\n            setLoading(false);\n            setError(false)\n        })\n            .catch(err=>{\n                console.log(err)\n                if(err.name===\"AbortError\")\n                {\n                    console.log(\"fetch aborted\");\n                }\n                else\n                {\n                    setError(err.message)\n                    setLoading(false)\n                }\n        })\n        }, 1000);\n        return ()=>abortCont.abort();\n    }, [url]);\n    return {data, isLoading, error};\n}\nexport default useFetch;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,SAAS,EAAEC,UAAU,CAAC,GAACP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxCD,SAAS,CAAC,MACV;IACI,MAAMW,SAAS,GAAC,IAAIC,eAAe,EAAE;IACrCC,UAAU,CAAC,MAAI;MACXC,KAAK,CAACX,GAAG,EAAE;QAACY,MAAM,EAAEJ,SAAS,CAACI;MAAM,CAAC,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAE;QACX,IAAG,CAACA,GAAG,CAACC,EAAE,EACV;UACC,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC1D;QACA,OAAOF,GAAG,CAACG,IAAI,EAAE;MACrB,CAAC,CAAC,CACGJ,IAAI,CAACX,IAAI,IAAE;QACZC,OAAO,CAACD,IAAI,CAAC;QACbG,UAAU,CAAC,KAAK,CAAC;QACjBE,QAAQ,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,CACGW,KAAK,CAACC,GAAG,IAAE;QACRC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChB,IAAGA,GAAG,CAACG,IAAI,KAAG,YAAY,EAC1B;UACIF,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAChC,CAAC,MAED;UACId,QAAQ,CAACY,GAAG,CAACI,OAAO,CAAC;UACrBlB,UAAU,CAAC,KAAK,CAAC;QACrB;MACR,CAAC,CAAC;IACF,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAIG,SAAS,CAACgB,KAAK,EAAE;EAChC,CAAC,EAAE,CAACxB,GAAG,CAAC,CAAC;EACT,OAAO;IAACE,IAAI;IAAEE,SAAS;IAAEE;EAAK,CAAC;AACnC,CAAC;AAAAL,EAAA,CArCKF,QAAQ;AAsCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}