import { isValid as isValidFns } from 'date-fns';
export function daysInMonth(month, year) {
    switch (month) {
        case 2:
            return !year || year.toString().length < 4
                ? 29
                : (year % 4 == 0 && year % 100) || year % 400 == 0
                    ? 29
                    : 28;
        case 9:
        case 4:
        case 6:
        case 11:
            return 30;
        default:
            return 31;
    }
}
export function isValid(day, month, year) {
    var date = new Date(year, month - 1, day);
    return month >= 1 && month < 13 && day > 0 && day <= daysInMonth(month, year) && isValidFns(date);
}
export function getCappedUnits(_a) {
    var day = _a.day, month = _a.month, year = _a.year;
    var maxDays = month ? daysInMonth(month, year) : 31;
    return {
        day: day && day > maxDays ? maxDays : day,
        month: month && month > 12 ? 12 : month,
        year: year && year > 9999 ? 9999 : year,
    };
}
//# sourceMappingURL=date.js.map